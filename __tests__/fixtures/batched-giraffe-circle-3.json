{
  "full": [
    "[---]->[---] ---",
    "[n0]->[n1] meet",
    "[n0]->[n1] probe genRanHex0",
    "[---]->[---] ---",
    "[n1]->[n0] have-probes",
    "[n1]->[n2] meet",
    "[n1]->[n2] probe genRanHex0",
    "[n1]->[n2] probe genRanHex1",
    "[n2]->[n0] meet",
    "[n2]->[n0] probe genRanHex2",
    "[---]->[---] ---",
    "[n0]->[n1] okay-to-send-probes",
    "[n2]->[n1] have-probes",
    "[n2]->[n0] probe genRanHex0",
    "[n2]->[n0] probe genRanHex1",
    "[n0]->[n2] have-probes",
    "[n0]->[n1] have-probes",
    "[---]->[---] ---",
    "[n1]->[n0] probe genRanHex1",
    "[n1]->[n2] okay-to-send-probes",
    "[n0]->[n2] trace genRanHex0 genRanHex3 genRanHex4",
    "[n2]->[n0] okay-to-send-probes",
    "[n1]->[n0] okay-to-send-probes",
    "[---]->[---] ---",
    "[n0]->[n2] trace genRanHex1 genRanHex5 genRanHex6",
    "[n0]->[n1] trace genRanHex1 genRanHex5 genRanHex7",
    "[n2]->[n1] probe genRanHex2",
    "[n2]->[n1] trace genRanHex0 genRanHex3 genRanHex4",
    "[n0]->[n1] probe genRanHex2",
    "[---]->[---] ---",
    "[n2]->[n1] trace genRanHex1 genRanHex5 genRanHex6",
    "[n1]->[n0] have-probes",
    "[n1]->[n2] have-probes",
    "[n1]->[n0] trace genRanHex0 genRanHex3 genRanHex4",
    "[n1]->[n2] trace genRanHex2 genRanHex8 genRanHex9",
    "[n1]->[n0] trace genRanHex2 genRanHex8 genRanHex10",
    "[---]->[---] ---",
    "[n1]->[n0] trace genRanHex1 genRanHex5 genRanHex6",
    "[n0]->[n1] okay-to-send-probes",
    "[n2]->[n1] okay-to-send-probes",
    "[n0]->[n2] trace genRanHex2 genRanHex8 genRanHex10",
    "[---]->[---] ---",
    "[n2]->[n1] trace genRanHex2 genRanHex8 genRanHex10",
    "[---]->[---] ---",
    "[---]->[---] ---"
  ],
  "probes": {
    "probe genRanHex0": [
      "[n0]->[n1]",
      "[n0]>-[n1]",
      "[n1]->[n2]",
      "[n1]>-[n2]",
      "[n2]->[n0]",
      "[n2]>-[n0]"
    ],
    "probe genRanHex1": [
      "[n1]->[n2]",
      "[n1]>-[n2]",
      "[n2]->[n0]",
      "[n1]->[n0]",
      "[n2]>-[n0]",
      "[n1]>-[n0]"
    ],
    "probe genRanHex2": [
      "[n2]->[n0]",
      "[n2]>-[n0]",
      "[n2]->[n1]",
      "[n0]->[n1]",
      "[n2]>-[n1]",
      "[n0]>-[n1]"
    ]
  },
  "n0": {
    "debugLog": [
      "I meet n1 [1/4]",
      "I queue n1 all my flood probes [2/4]",
      "QUEUEING ALL FLOOD PROBES TO n1",
      "and create a new flood probe for other friends than n1 [3/4]",
      "creating flood probe",
      "n0 is talking to n1",
      "QUEUEING PROBE genRanHex0 TO n1 [3/4]",
      "Done onMeet n1 [4/4]",
      "[Node#receiveMessage] n0 receives message from n1",
      "[Node#receiveMessage] n0 receives message from n2",
      "MEET MESSAGE FROM n2, queueing all flood probes",
      "QUEUEING ALL FLOOD PROBES TO n2",
      "QUEUEING PROBE genRanHex0 TO n2",
      "n0 starts waiting to talk to n2",
      "n0 raises hand to n2",
      "[Node#receiveMessage] n0 receives message from n2",
      "INCOMING PROBE genRanHex2 IS NEW TO US, FLOOD IT FORWARD",
      "n0 starts waiting to talk to n1",
      "n0 raises hand to n1",
      "[Node#receiveMessage] n0 receives message from n2",
      "INCOMING PROBE genRanHex0 IS KNOWN TO US",
      "PROBE genRanHex0 ALREADY KNOWN TO US, VIRGIN FOR n2!",
      "[Node#lookup-probe] n0 is looking up probe genRanHex0",
      "[Node#sendTraceMessage] n0 sends trace message to n2: trace genRanHex0 genRanHex3 genRanHex4",
      "[Node#receiveMessage] n0 receives message from n2",
      "INCOMING PROBE genRanHex1 IS NEW TO US, FLOOD IT FORWARD",
      "[Node#receiveMessage] n0 receives message from n1",
      "INCOMING PROBE genRanHex1 IS KNOWN TO US",
      "PROBE genRanHex1 ALREADY KNOWN TO US, VIRGIN FOR n1!",
      "[Node#lookup-probe] n0 is looking up probe genRanHex1",
      "[Node#sendTraceMessage] n0 sends trace message to n2: trace genRanHex1 genRanHex5 genRanHex6",
      "[Node#sendTraceMessage] n0 sends trace message to n1: trace genRanHex1 genRanHex5 genRanHex7",
      "[Node#receiveMessage] n0 receives message from n2",
      "n0 receives okay-to-send-probes from n2",
      "[Node#receiveMessage] n0 receives message from n1",
      "n0 receives okay-to-send-probes from n1",
      "QUEUEING PROBE genRanHex2 TO n1 [3/4]",
      "[Node#receiveMessage] n0 receives message from n1",
      "[Node#receiveMessage] n0 receives message from n1",
      "[TraceEngine] handling trace message from n1: trace genRanHex0 genRanHex3 genRanHex4",
      "loop-found genRanHex0 genRanHex3",
      "[Node#receiveMessage] n0 receives message from n1",
      "[TraceEngine] handling trace message from n1: trace genRanHex2 genRanHex8 genRanHex10",
      "checking if we have seenThisTraceBefore genRanHex2 genRanHex8 genRanHex10 in undefined",
      "[Node#lookup-probe] n0 is looking up probe genRanHex2",
      "[TraceEngine] forwarding a counter-probe-wise trace message from n1: trace genRanHex2 genRanHex8 genRanHex10",
      "Looking for other leg genRanHex2 genRanHex8 genRanHex10 in {\"n1\":\"genRanHex10\"}",
      "[TraceEngine] in the context of trace message from n1: trace genRanHex2 genRanHex8 genRanHex10, we found these counter-probe-wise next hops: [n2], and otherLeg undefined",
      "[TracesEngine] sending message to n2: trace genRanHex2 genRanHex8 genRanHex10",
      "[Node#sendTraceMessage] n0 sends trace message to n2: trace genRanHex2 genRanHex8 genRanHex10",
      "[Node#receiveMessage] n0 receives message from n1",
      "[TraceEngine] handling trace message from n1: trace genRanHex1 genRanHex5 genRanHex6",
      "loop-found genRanHex1 genRanHex5"
    ],
    "loopsFound": [
      "genRanHex0 genRanHex3",
      "genRanHex1 genRanHex5"
    ]
  },
  "n1": {
    "debugLog": [
      "[Node#receiveMessage] n1 receives message from n0",
      "MEET MESSAGE FROM n0, queueing all flood probes",
      "QUEUEING ALL FLOOD PROBES TO n0",
      "[Node#receiveMessage] n1 receives message from n0",
      "INCOMING PROBE genRanHex0 IS NEW TO US, FLOOD IT FORWARD",
      "n1 starts waiting to talk to n0",
      "n1 raises hand to n0",
      "I meet n2 [1/4]",
      "I queue n2 all my flood probes [2/4]",
      "QUEUEING ALL FLOOD PROBES TO n2",
      "QUEUEING PROBE genRanHex0 TO n2",
      "n1 is talking to n2",
      "QUEUEING PROBE genRanHex0 TO n2 [3/4]",
      "and create a new flood probe for other friends than n2 [3/4]",
      "creating flood probe",
      "n1 is talking to n2",
      "QUEUEING PROBE genRanHex1 TO n2 [3/4]",
      "Done onMeet n2 [4/4]",
      "[Node#receiveMessage] n1 receives message from n0",
      "n1 receives okay-to-send-probes from n0",
      "QUEUEING PROBE genRanHex1 TO n0 [3/4]",
      "[Node#receiveMessage] n1 receives message from n2",
      "[Node#receiveMessage] n1 receives message from n0",
      "[Node#receiveMessage] n1 receives message from n0",
      "[TraceEngine] handling trace message from n0: trace genRanHex1 genRanHex5 genRanHex7",
      "checking if we have seenThisTraceBefore genRanHex1 genRanHex5 genRanHex7 in undefined",
      "[Node#lookup-probe] n1 is looking up probe genRanHex1",
      "[TraceEngine] forwarding a counter-probe-wise trace message from n0: trace genRanHex1 genRanHex5 genRanHex7",
      "Looking for other leg genRanHex1 genRanHex5 genRanHex7 in {\"n0\":\"genRanHex7\"}",
      "[TraceEngine] in the context of trace message from n0: trace genRanHex1 genRanHex5 genRanHex7, we found these counter-probe-wise next hops: [], and otherLeg undefined",
      "[Node#receiveMessage] n1 receives message from n2",
      "INCOMING PROBE genRanHex2 IS NEW TO US, FLOOD IT FORWARD",
      "n1 starts waiting to talk to n0",
      "n1 raises hand to n0",
      "n1 starts waiting to talk to n2",
      "n1 raises hand to n2",
      "[Node#receiveMessage] n1 receives message from n2",
      "[TraceEngine] handling trace message from n2: trace genRanHex0 genRanHex3 genRanHex4",
      "checking if we have seenThisTraceBefore genRanHex0 genRanHex3 genRanHex4 in undefined",
      "[Node#lookup-probe] n1 is looking up probe genRanHex0",
      "[TraceEngine] forwarding a counter-probe-wise trace message from n2: trace genRanHex0 genRanHex3 genRanHex4",
      "Looking for other leg genRanHex0 genRanHex3 genRanHex4 in {\"n2\":\"genRanHex4\"}",
      "[TraceEngine] in the context of trace message from n2: trace genRanHex0 genRanHex3 genRanHex4, we found these counter-probe-wise next hops: [n0], and otherLeg undefined",
      "[TracesEngine] sending message to n0: trace genRanHex0 genRanHex3 genRanHex4",
      "[Node#sendTraceMessage] n1 sends trace message to n0: trace genRanHex0 genRanHex3 genRanHex4",
      "[Node#receiveMessage] n1 receives message from n0",
      "INCOMING PROBE genRanHex2 IS KNOWN TO US",
      "PROBE genRanHex2 ALREADY KNOWN TO US, VIRGIN FOR n0!",
      "[Node#lookup-probe] n1 is looking up probe genRanHex2",
      "[Node#sendTraceMessage] n1 sends trace message to n2: trace genRanHex2 genRanHex8 genRanHex9",
      "[Node#sendTraceMessage] n1 sends trace message to n0: trace genRanHex2 genRanHex8 genRanHex10",
      "[Node#receiveMessage] n1 receives message from n2",
      "[TraceEngine] handling trace message from n2: trace genRanHex1 genRanHex5 genRanHex6",
      "checking if we have seenThisTraceBefore genRanHex1 genRanHex5 genRanHex6 in {\"n0\":\"genRanHex7\"}",
      "[Node#lookup-probe] n1 is looking up probe genRanHex1",
      "[TraceEngine] forwarding a counter-probe-wise trace message from n2: trace genRanHex1 genRanHex5 genRanHex6",
      "Looking for other leg genRanHex1 genRanHex5 genRanHex6 in {\"n0\":\"genRanHex7\",\"n2\":\"genRanHex6\"}",
      "[TraceEngine] in the context of trace message from n2: trace genRanHex1 genRanHex5 genRanHex6, we found these counter-probe-wise next hops: [], and otherLeg n0",
      "[TracesEngine] found otherLeg n0 for trace genRanHex5 of probe genRanHex1",
      "[Node#sendTraceMessage] n1 sends trace message to n0: trace genRanHex1 genRanHex5 genRanHex6",
      "[Node#receiveMessage] n1 receives message from n0",
      "n1 receives okay-to-send-probes from n0",
      "[Node#receiveMessage] n1 receives message from n2",
      "n1 receives okay-to-send-probes from n2",
      "[Node#receiveMessage] n1 receives message from n2",
      "[TraceEngine] handling trace message from n2: trace genRanHex2 genRanHex8 genRanHex10",
      "loop-found genRanHex2 genRanHex8"
    ],
    "loopsFound": [
      "genRanHex2 genRanHex8"
    ]
  },
  "n2": {
    "debugLog": [
      "I meet n0 [1/4]",
      "I queue n0 all my flood probes [2/4]",
      "QUEUEING ALL FLOOD PROBES TO n0",
      "and create a new flood probe for other friends than n0 [3/4]",
      "creating flood probe",
      "n2 is talking to n0",
      "QUEUEING PROBE genRanHex2 TO n0 [3/4]",
      "Done onMeet n0 [4/4]",
      "[Node#receiveMessage] n2 receives message from n1",
      "MEET MESSAGE FROM n1, queueing all flood probes",
      "QUEUEING ALL FLOOD PROBES TO n1",
      "QUEUEING PROBE genRanHex2 TO n1",
      "n2 starts waiting to talk to n1",
      "n2 raises hand to n1",
      "[Node#receiveMessage] n2 receives message from n1",
      "INCOMING PROBE genRanHex0 IS NEW TO US, FLOOD IT FORWARD",
      "n2 is talking to n0",
      "QUEUEING PROBE genRanHex0 TO n0 [3/4]",
      "[Node#receiveMessage] n2 receives message from n1",
      "INCOMING PROBE genRanHex1 IS NEW TO US, FLOOD IT FORWARD",
      "n2 is talking to n0",
      "QUEUEING PROBE genRanHex1 TO n0 [3/4]",
      "[Node#receiveMessage] n2 receives message from n0",
      "[Node#receiveMessage] n2 receives message from n1",
      "n2 receives okay-to-send-probes from n1",
      "QUEUEING PROBE genRanHex2 TO n1 [3/4]",
      "[Node#receiveMessage] n2 receives message from n0",
      "[TraceEngine] handling trace message from n0: trace genRanHex0 genRanHex3 genRanHex4",
      "checking if we have seenThisTraceBefore genRanHex0 genRanHex3 genRanHex4 in undefined",
      "[Node#lookup-probe] n2 is looking up probe genRanHex0",
      "[TraceEngine] forwarding a counter-probe-wise trace message from n0: trace genRanHex0 genRanHex3 genRanHex4",
      "Looking for other leg genRanHex0 genRanHex3 genRanHex4 in {\"n0\":\"genRanHex4\"}",
      "[TraceEngine] in the context of trace message from n0: trace genRanHex0 genRanHex3 genRanHex4, we found these counter-probe-wise next hops: [n1], and otherLeg undefined",
      "[TracesEngine] sending message to n1: trace genRanHex0 genRanHex3 genRanHex4",
      "[Node#sendTraceMessage] n2 sends trace message to n1: trace genRanHex0 genRanHex3 genRanHex4",
      "[Node#receiveMessage] n2 receives message from n0",
      "[TraceEngine] handling trace message from n0: trace genRanHex1 genRanHex5 genRanHex6",
      "checking if we have seenThisTraceBefore genRanHex1 genRanHex5 genRanHex6 in undefined",
      "[Node#lookup-probe] n2 is looking up probe genRanHex1",
      "[TraceEngine] forwarding a counter-probe-wise trace message from n0: trace genRanHex1 genRanHex5 genRanHex6",
      "Looking for other leg genRanHex1 genRanHex5 genRanHex6 in {\"n0\":\"genRanHex6\"}",
      "[TraceEngine] in the context of trace message from n0: trace genRanHex1 genRanHex5 genRanHex6, we found these counter-probe-wise next hops: [n1], and otherLeg undefined",
      "[TracesEngine] sending message to n1: trace genRanHex1 genRanHex5 genRanHex6",
      "[Node#sendTraceMessage] n2 sends trace message to n1: trace genRanHex1 genRanHex5 genRanHex6",
      "[Node#receiveMessage] n2 receives message from n1",
      "[Node#receiveMessage] n2 receives message from n1",
      "[TraceEngine] handling trace message from n1: trace genRanHex2 genRanHex8 genRanHex9",
      "checking if we have seenThisTraceBefore genRanHex2 genRanHex8 genRanHex9 in undefined",
      "[Node#lookup-probe] n2 is looking up probe genRanHex2",
      "[TraceEngine] forwarding a counter-probe-wise trace message from n1: trace genRanHex2 genRanHex8 genRanHex9",
      "Looking for other leg genRanHex2 genRanHex8 genRanHex9 in {\"n1\":\"genRanHex9\"}",
      "[TraceEngine] in the context of trace message from n1: trace genRanHex2 genRanHex8 genRanHex9, we found these counter-probe-wise next hops: [], and otherLeg undefined",
      "[Node#receiveMessage] n2 receives message from n0",
      "[TraceEngine] handling trace message from n0: trace genRanHex2 genRanHex8 genRanHex10",
      "checking if we have seenThisTraceBefore genRanHex2 genRanHex8 genRanHex10 in {\"n1\":\"genRanHex9\"}",
      "[Node#lookup-probe] n2 is looking up probe genRanHex2",
      "[TraceEngine] forwarding a counter-probe-wise trace message from n0: trace genRanHex2 genRanHex8 genRanHex10",
      "Looking for other leg genRanHex2 genRanHex8 genRanHex10 in {\"n1\":\"genRanHex9\",\"n0\":\"genRanHex10\"}",
      "[TraceEngine] in the context of trace message from n0: trace genRanHex2 genRanHex8 genRanHex10, we found these counter-probe-wise next hops: [], and otherLeg n1",
      "[TracesEngine] found otherLeg n1 for trace genRanHex8 of probe genRanHex2",
      "[Node#sendTraceMessage] n2 sends trace message to n1: trace genRanHex2 genRanHex8 genRanHex10"
    ],
    "loopsFound": []
  }
}
