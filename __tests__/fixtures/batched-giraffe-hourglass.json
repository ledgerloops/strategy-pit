{
  "full": [
    "[---]->[---] ---",
    "[Alice]->[Bob] meet",
    "[Alice]->[Bob] probe genRanHex0",
    "[---]->[---] ---",
    "[Bob]->[Alice] have-probes",
    "[Bob]->[Charlie] meet",
    "[Bob]->[Charlie] have-probes",
    "[---]->[---] ---",
    "[Alice]->[Bob] okay-to-send-probes",
    "[Charlie]->[Bob] okay-to-send-probes",
    "[Charlie]->[Alice] meet",
    "[---]->[---] ---",
    "[Bob]->[Charlie] probe genRanHex0",
    "[Alice]->[Charlie] have-probes",
    "[Alice]->[Dave] meet",
    "[Alice]->[Dave] have-probes",
    "[---]->[---] ---",
    "[Charlie]->[Bob] have-probes",
    "[Charlie]->[Alice] have-probes",
    "[Charlie]->[Alice] okay-to-send-probes",
    "[Dave]->[Alice] okay-to-send-probes",
    "[Dave]->[Edward] meet",
    "[---]->[---] ---",
    "[Bob]->[Charlie] okay-to-send-probes",
    "[Alice]->[Charlie] okay-to-send-probes",
    "[Alice]->[Charlie] probe genRanHex0",
    "[Alice]->[Dave] probe genRanHex0",
    "[Edward]->[Alice] meet",
    "[---]->[---] ---",
    "[Charlie]->[Alice] probe genRanHex0",
    "[Dave]->[Alice] have-probes",
    "[Dave]->[Edward] have-probes",
    "[Alice]->[Edward] have-probes",
    "[---]->[---] ---",
    "[Alice]->[Dave] okay-to-send-probes",
    "[Edward]->[Dave] okay-to-send-probes",
    "[Edward]->[Alice] okay-to-send-probes",
    "[---]->[---] ---",
    "[Dave]->[Edward] probe genRanHex0",
    "[Alice]->[Edward] probe genRanHex0",
    "[---]->[---] ---",
    "[Edward]->[Dave] have-probes",
    "[Edward]->[Alice] have-probes",
    "[Edward]->[Dave] trace genRanHex0 genRanHex1 genRanHex2",
    "[Edward]->[Alice] trace genRanHex0 genRanHex1 genRanHex3",
    "[---]->[---] ---",
    "[Dave]->[Edward] okay-to-send-probes",
    "[Alice]->[Edward] okay-to-send-probes",
    "[Dave]->[Alice] trace genRanHex0 genRanHex1 genRanHex2",
    "[---]->[---] ---",
    "[Alice]->[Edward] trace genRanHex0 genRanHex1 genRanHex2",
    "[---]->[---] ---",
    "[---]->[---] ---"
  ],
  "probes": {
    "probe genRanHex0": [
      "[Alice]->[Bob]",
      "[Alice]>-[Bob]",
      "[Bob]->[Charlie]",
      "[Bob]>-[Charlie]",
      "[Alice]->[Charlie]",
      "[Alice]->[Dave]",
      "[Charlie]->[Alice]",
      "[Alice]>-[Charlie]",
      "[Alice]>-[Dave]",
      "[Charlie]>-[Alice]",
      "[Dave]->[Edward]",
      "[Alice]->[Edward]",
      "[Dave]>-[Edward]",
      "[Alice]>-[Edward]"
    ]
  },
  "alice": {
    "debugLog": [
      "[Node#receiveMessage] Alice receives message from Charlie",
      "MEET MESSAGE FROM Charlie, queueing all flood probes",
      "QUEUEING ALL FLOOD PROBES TO Charlie",
      "QUEUEING PROBE genRanHex0 TO Charlie",
      "Alice starts waiting to talk to Charlie",
      "Alice raises hand to Charlie",
      "[Node#receiveMessage] Alice receives message from Charlie",
      "[Node#receiveMessage] Alice receives message from Charlie",
      "Alice receives okay-to-send-probes from Charlie",
      "QUEUEING PROBE genRanHex0 TO Charlie [3/4]",
      "[Node#receiveMessage] Alice receives message from Charlie",
      "INCOMING PROBE genRanHex0 IS KNOWN TO US",
      "PROBE genRanHex0 ALREADY KNOWN TO US, BUT NOT VIRGIN FOR Charlie!"
    ],
    "loopsFound": []
  },
  "charlie": {
    "debugLog": [
      "I meet Alice [1/4]",
      "I queue Alice all my flood probes [2/4]",
      "QUEUEING ALL FLOOD PROBES TO Alice",
      "Done onMeet Alice [4/4]",
      "Charlie starts waiting to talk to Alice",
      "Charlie raises hand to Alice",
      "[Node#receiveMessage] Charlie receives message from Alice",
      "[Node#receiveMessage] Charlie receives message from Alice",
                                            "Charlie receives okay-to-send-probes from Alice",
                                            "QUEUEING PROBE genRanHex0 TO Alice [3/4]",
      "[Node#receiveMessage] Charlie receives message from Alice",
                                            "INCOMING PROBE genRanHex0 IS KNOWN TO US",
                                            "PROBE genRanHex0 ALREADY KNOWN TO US, BUT NOT VIRGIN FOR Alice!"
    ],
    "loopsFound": []
  },
  "dave": {
    "debugLog": [
      "[Node#receiveMessage] Dave receives message from Alice",
      "MEET MESSAGE FROM Alice, queueing all flood probes",
      "QUEUEING ALL FLOOD PROBES TO Alice",
      "[Node#receiveMessage] Dave receives message from Alice",
      "I meet Edward [1/4]",
      "I queue Edward all my flood probes [2/4]",
      "QUEUEING ALL FLOOD PROBES TO Edward",
      "Done onMeet Edward [4/4]",
      "[Node#receiveMessage] Dave receives message from Alice",
      "INCOMING PROBE genRanHex0 IS NEW TO US, FLOOD IT FORWARD",
      "Dave starts waiting to talk to Alice",
      "Dave raises hand to Alice",
      "Dave starts waiting to talk to Edward",
      "Dave raises hand to Edward",
      "[Node#receiveMessage] Dave receives message from Alice",
      "Dave receives okay-to-send-probes from Alice",
      "[Node#receiveMessage] Dave receives message from Edward",
      "Dave receives okay-to-send-probes from Edward",
      "QUEUEING PROBE genRanHex0 TO Edward [3/4]",
      "[Node#receiveMessage] Dave receives message from Edward",
      "[Node#receiveMessage] Dave receives message from Edward",
      "[TraceEngine] handling trace message from Edward: trace genRanHex0 genRanHex1 genRanHex2",
      "[Node#lookup-probe] Dave is looking up probe genRanHex0",
      "[TraceEngine] forwarding a counter-probe-wise trace message from Edward: trace genRanHex0 genRanHex1 genRanHex2",
      "Looking for other leg genRanHex0 genRanHex1 genRanHex2 in {\"Edward\":\"genRanHex2\"}",
      "[TraceEngine] in the context of trace message from Edward: trace genRanHex0 genRanHex1 genRanHex2, we found these counter-probe-wise next hops: [Alice], and otherLeg undefined",
      "[TracesEngine] sending message to Alice: trace genRanHex0 genRanHex1 genRanHex2",
      "[Node#sendTraceMessage] Dave sends trace message to Alice: trace genRanHex0 genRanHex1 genRanHex2"
    ],
    "loopsFound": []
  },
  "edward": {
    "debugLog": [
      "[Node#receiveMessage] Edward receives message from Dave",
      "MEET MESSAGE FROM Dave, queueing all flood probes",
      "QUEUEING ALL FLOOD PROBES TO Dave",
      "I meet Alice [1/4]",
      "I queue Alice all my flood probes [2/4]",
      "QUEUEING ALL FLOOD PROBES TO Alice",
      "Done onMeet Alice [4/4]",
      "[Node#receiveMessage] Edward receives message from Dave",
      "[Node#receiveMessage] Edward receives message from Alice",
      "[Node#receiveMessage] Edward receives message from Dave",
      "INCOMING PROBE genRanHex0 IS NEW TO US, FLOOD IT FORWARD",
      "Edward starts waiting to talk to Dave",
      "Edward raises hand to Dave",
      "Edward starts waiting to talk to Alice",
      "Edward raises hand to Alice",
      "[Node#receiveMessage] Edward receives message from Alice",
      "INCOMING PROBE genRanHex0 IS KNOWN TO US",
      "PROBE genRanHex0 ALREADY KNOWN TO US, VIRGIN FOR Alice!",
      "[Node#lookup-probe] Edward is looking up probe genRanHex0",
      "[Node#sendTraceMessage] Edward sends trace message to Dave: trace genRanHex0 genRanHex1 genRanHex2",
      "[Node#sendTraceMessage] Edward sends trace message to Alice: trace genRanHex0 genRanHex1 genRanHex3",
      "[Node#receiveMessage] Edward receives message from Dave",
      "Edward receives okay-to-send-probes from Dave",
      "[Node#receiveMessage] Edward receives message from Alice",
      "Edward receives okay-to-send-probes from Alice",
      "[Node#receiveMessage] Edward receives message from Alice",
      "[TraceEngine] handling trace message from Alice: trace genRanHex0 genRanHex1 genRanHex2",
      "loop-found genRanHex0 genRanHex1"
    ],
    "loopsFound": []
  }
}
