{
  "full": [
    "[---]->[---] ---",
    "[Alice]->[Bob] meet",
    "[Alice]->[Bob] probe genRanHex0",
    "[Bob]->[Charlie] meet",
    "[Charlie]->[Alice] meet",
    "[---]->[---] ---",
    "[Bob]->[Charlie] have-probes",
    "[Bob]->[Alice] have-probes",
    "[Alice]->[Charlie] have-probes",
    "[---]->[---] ---",
    "[Charlie]->[Bob] okay-to-send-probes",
    "[Alice]->[Bob] okay-to-send-probes",
    "[Charlie]->[Alice] okay-to-send-probes",
    "[---]->[---] ---",
    "[Bob]->[Charlie] probe genRanHex0",
    "[Alice]->[Charlie] probe genRanHex0",
    "[---]->[---] ---",
    "[Charlie]->[Alice] have-probes",
    "[Charlie]->[Bob] have-probes",
    "[Charlie]->[Bob] trace genRanHex0 genRanHex1 genRanHex2",
    "[Charlie]->[Alice] trace genRanHex0 genRanHex1 genRanHex3",
    "[---]->[---] ---",
    "[Alice]->[Charlie] okay-to-send-probes",
    "[Bob]->[Charlie] okay-to-send-probes",
    "[Bob]->[Alice] trace genRanHex0 genRanHex1 genRanHex2",
    "[---]->[---] ---",
    "[---]->[---] ---"
  ],
  "probes": {
    "probe genRanHex0": [
      "[Alice]->[Bob]",
      "[Alice]>-[Bob]",
      "[Bob]->[Charlie]",
      "[Alice]->[Charlie]",
      "[Bob]>-[Charlie]",
      "[Alice]>-[Charlie]"
    ]
  },
  "alice": {
    "debugLog": [
      "I meet Bob [1/4]",
      "I queue Bob all my flood probes [2/4]",
      "QUEUEING ALL FLOOD PROBES TO Bob",
      "and create a new flood probe for other friends than Bob [3/4]",
      "creating flood probe",
      "Alice is talking to Bob",
      "QUEUEING PROBE genRanHex0 TO Bob [3/4]",
      "Done onMeet Bob [4/4]",
      "[Node#receiveMessage] Alice receives message from Charlie",
      "MEET MESSAGE FROM Charlie, queueing all flood probes",
      "QUEUEING ALL FLOOD PROBES TO Charlie",
      "QUEUEING PROBE genRanHex0 TO Charlie",
      "Alice starts waiting to talk to Charlie",
      "Alice raises hand to Charlie",
      "[Node#receiveMessage] Alice receives message from Bob",
      "[Node#receiveMessage] Alice receives message from Charlie",
      "Alice receives okay-to-send-probes from Charlie",
      "QUEUEING PROBE genRanHex0 TO Charlie [3/4]",
      "[Node#receiveMessage] Alice receives message from Charlie",
      "[Node#receiveMessage] Alice receives message from Charlie",
      "[TraceEngine] handling trace message from Charlie: trace genRanHex0 genRanHex1 genRanHex3",
      "[Node#lookup-probe] Alice is looking up probe genRanHex0",
      "[TraceEngine] in the context of trace message from Charlie: trace genRanHex0 genRanHex1 genRanHex3, we found these upstreams: [], and otherLeg undefined",
      "[Node#receiveMessage] Alice receives message from Bob",
      "[TraceEngine] handling trace message from Bob: trace genRanHex0 genRanHex1 genRanHex2",
      "[Node#lookup-probe] Alice is looking up probe genRanHex0",
      "[TraceEngine] in the context of trace message from Bob: trace genRanHex0 genRanHex1 genRanHex2, we found these upstreams: [], and otherLeg undefined"
    ],
    "loopsFound": []
  },
  "bob": {
    "debugLog": [
      "I meet Charlie [1/4]",
      "I queue Charlie all my flood probes [2/4]",
      "QUEUEING ALL FLOOD PROBES TO Charlie",
      "Done onMeet Charlie [4/4]",
      "[Node#receiveMessage] Bob receives message from Alice",
      "MEET MESSAGE FROM Alice, queueing all flood probes",
      "QUEUEING ALL FLOOD PROBES TO Alice",
      "[Node#receiveMessage] Bob receives message from Alice",
      "INCOMING PROBE genRanHex0 IS NEW TO US, FLOOD IT FORWARD",
      "Bob starts waiting to talk to Charlie",
      "Bob raises hand to Charlie",
      "Bob starts waiting to talk to Alice",
      "Bob raises hand to Alice",
      "[Node#receiveMessage] Bob receives message from Charlie",
      "Bob receives okay-to-send-probes from Charlie",
      "QUEUEING PROBE genRanHex0 TO Charlie [3/4]",
      "[Node#receiveMessage] Bob receives message from Alice",
      "Bob receives okay-to-send-probes from Alice",
      "[Node#receiveMessage] Bob receives message from Charlie",
      "[Node#receiveMessage] Bob receives message from Charlie",
      "[TraceEngine] handling trace message from Charlie: trace genRanHex0 genRanHex1 genRanHex2",
      "[Node#lookup-probe] Bob is looking up probe genRanHex0",
      "[TraceEngine] in the context of trace message from Charlie: trace genRanHex0 genRanHex1 genRanHex2, we found these upstreams: [Alice], and otherLeg undefined",
      "[TracesEngine] sending message to Alice: trace genRanHex0 genRanHex1 genRanHex2",
      "[Node#sendTraceMessage] Bob sends trace message to Alice: trace genRanHex0 genRanHex1 genRanHex2"
    ],
    "loopsFound": []
  },
  "charlie": {
    "debugLog": [
      "I meet Alice [1/4]",
      "I queue Alice all my flood probes [2/4]",
      "QUEUEING ALL FLOOD PROBES TO Alice",
      "Done onMeet Alice [4/4]",
      "[Node#receiveMessage] Charlie receives message from Bob",
      "MEET MESSAGE FROM Bob, queueing all flood probes",
      "QUEUEING ALL FLOOD PROBES TO Bob",
      "[Node#receiveMessage] Charlie receives message from Bob",
      "[Node#receiveMessage] Charlie receives message from Alice",
      "[Node#receiveMessage] Charlie receives message from Bob",
      "INCOMING PROBE genRanHex0 IS NEW TO US, FLOOD IT FORWARD",
      "Charlie starts waiting to talk to Alice",
      "Charlie raises hand to Alice",
      "Charlie starts waiting to talk to Bob",
      "Charlie raises hand to Bob",
      "[Node#receiveMessage] Charlie receives message from Alice",
      "INCOMING PROBE genRanHex0 IS KNOWN TO US",
      "PROBE genRanHex0 ALREADY KNOWN TO US, VIRGIN FOR Alice!",
      "[Node#lookup-probe] Charlie is looking up probe genRanHex0",
      "[Node#sendTraceMessage] Charlie sends trace message to Bob: trace genRanHex0 genRanHex1 genRanHex2",
      "[Node#sendTraceMessage] Charlie sends trace message to Alice: trace genRanHex0 genRanHex1 genRanHex3",
      "[Node#receiveMessage] Charlie receives message from Alice",
      "Charlie receives okay-to-send-probes from Alice",
      "[Node#receiveMessage] Charlie receives message from Bob",
      "Charlie receives okay-to-send-probes from Bob"
    ],
    "loopsFound": []
  }
}
